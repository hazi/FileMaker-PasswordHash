// PasswordVerify(password; hash)
// Verifies that a password matches a hash
//
// ver 0.1
// LastUpdate: 2019/12/05
// Compatible: FileMaker Pro 16 and later
//             not supported in runtime solutions
//
// Params:
//   password: [Text] 生のパスワード
//   hash:     [Text] PasswordHash で作られた Hash値
//
// Result: [Number, Text] True(1), False(0), "?"
//   認証成功時（一致）: True
//   認証失敗時（不一致）: False
//   エラー時（hashの形式を誤っている、ストレッチング回数が限界を超えているなど）: "?"
//
// Example:
//   認証を検証する場合:
//     $hash = "$6f$/pFNGxeaFY7bSiX4$j8OaSP65.C7JPf3lYCqHUbXyTH9C2qSPfBuwlHzqojf8ZtvdPbUEczVesUBY4Htq4ppxhkKoLv09qKsszNwKmQ";
//     Exact(PasswordVerify("Password"; $hash); True)
//   5万回を超えるストレッチングを検証する場合（FileMaker 18以上必須）:
//     $hash "$6f$rounds=60000$7HM2jvfdM9/gYvKj$OHXOzqBUI2bw.xCjFMf1tl1WudWsBRwUYrBEp8bUG651ciJDhOeIP0cnREwjul9KFvOnxj0pH6lgYXYpSkTC6w";
//     SetRecursion(Exact(PasswordVerify("Password"; $hash); True); 60100)
//
// Licensed under the BSD license. See https://github.com/hazi/FileMaker-PasswordHash/blob/master/LICENSE
Let([
  ~separator = "$";
  ~hash = hash;

  ~identifierEndPosition = Position(hash; ~separator; 2; 1);
  ~identifier = Middle(hash; 2; ~identifierEndPosition - 2);
  ~hash = Middle(~hash; ~identifierEndPosition + 1; Length(~hash));

  ~roundsKeyword = "rounds=";
  ~nextSeparator = Position(~hash; ~separator; 1; 1);
  ~rounds = If(
    Left(~hash; Length(~roundsKeyword)); ~roundsKeyword;
    Middle(~hash; Length(~roundsKeyword) + 1; ~nextSeparator - Length(~roundsKeyword) - 1)
  );
  ~rounds = If(Exact(~rounds; GetAsNumber(~rounds)); GetAsNumber(~rounds));
  ~hash = If(not IsEmpty(~rounds); Middle(~hash; ~nextSeparator + 1; Length(~hash)); ~hash);

  ~lastSeparator = Position(~hash; ~separator; Length(~hash); -1);
  ~salt = Middle(~hash; 1; ~lastSeparator - 1);
  ~salt = If(IsEmpty(~salt); Char(26); ~salt);

  ~result = PasswordHash(password; ~salt; ~rounds);
_=0];
  Case(
    ~rounds > 999999999
    or ~identifier <> "6f"
    or Length(~salt) > 100;
    "?";

    Exact(~result; hash)
  )
)
